{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Launch (minichlink)",
            "type": "cppdbg",
            "request": "launch",
            "cwd": "${workspaceFolder}",
            "program": "${workspaceRoot}/build/firmware.elf",
            "debugServerPath": "${workspaceFolder}/minichlink.exe",
            "debugServerArgs": "-aG",
            "MIMode": "gdb",
            "miDebuggerPath": "E:/msys64/ucrt64/bin/gdb-multiarch.exe",
            "miDebuggerServerAddress": "localhost:2000",
            "setupCommands": [
                {
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true,
                },
            ],
            "svdPath": "${workspaceFolder}/CH32V003xx.svd"
        },
        {
            "name": "Launch (OpenOCD)",
            "type": "cppdbg",
            "request": "launch",
            "cwd": "${workspaceFolder}",
            "program": "${workspaceRoot}/build/firmware.elf",
            // TODO vscode seems to never recognize the serverStarted pattern, it never starts gdb...
            // "debugServerPath": "D:/Downloads/MounRiver_Studio_V192_Setup/app/toolchain/OpenOCD/bin/openocd.exe",
            // "debugServerArgs": "-s D:/Downloads/MounRiver_Studio_V192_Setup/app/toolchain/OpenOCD/bin -f wch-riscv.cfg",
            // "serverStarted": ".* Listening on port \\d+ for gdb connections",
            "MIMode": "gdb",
            // TODO riscv32-unknown-elf-gdb returns 0xC0000135 = missing dll. should we build the toolchain statically?
            // "miDebuggerPath": "E:/msys64/home/LaXiS/riscv-gnu-toolchain/build-ch32v003/bin/riscv32-unknown-elf-gdb.exe",
            "miDebuggerPath": "E:/msys64/ucrt64/bin/gdb-multiarch.exe",
            "miDebuggerServerAddress": "localhost:3333",
            "setupCommands": [
                {
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true,
                }
            ],
            "svdPath": "${workspaceFolder}/CH32V003xx.svd",
            "logging": {
                "engineLogging": true
            }
        }
    ]
}